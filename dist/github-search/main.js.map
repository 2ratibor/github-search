{"version":3,"sources":["./src/app/guards/search-page.guard.ts","./src/app/graphql.module.ts","./src/environments/environment.ts","./src/app/utils/date-parse-logic.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/token-page/token-page.component.ts","./src/app/token-page/token-page.component.html","./src/app/api/github-api.service.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/search-page/search-page.component.ts","./src/app/search-page/search-page.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class SearchPageGuard implements CanActivate {\n    constructor(private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        const gitHubPersonalAccessToken = JSON.parse(localStorage.getItem('gitHubPersonalAccessToken'));\n        if (gitHubPersonalAccessToken === null) {\n            this.router.navigate(['/token-page']);\n        }\n        return gitHubPersonalAccessToken !== null;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { APOLLO_OPTIONS } from 'apollo-angular';\nimport { ApolloLink, InMemoryCache } from '@apollo/client/core';\nimport { HttpLink } from 'apollo-angular/http';\nimport { setContext } from '@apollo/client/link/context';\n\nconst uri = 'https://api.github.com/graphql'; // <-- add the URL of the GraphQL server here\n\nexport function createApollo(httpLink: HttpLink) {\n    const basic = setContext((operation, context) => ({\n        headers: {\n            Accept: 'charset=utf-8'\n        }\n    }));\n\n    const auth = setContext((operation, context) => {\n        const gitHubPersonalAccessToken = JSON.parse(localStorage.getItem('gitHubPersonalAccessToken'));\n\n        if (gitHubPersonalAccessToken === null) {\n            return {};\n        } else {\n            return {\n                headers: {\n                    Authorization: `Bearer ${gitHubPersonalAccessToken}`\n                }\n            };\n        }\n    });\n\n    return {\n        link: ApolloLink.from([basic, auth, httpLink.create({ uri })]),\n        cache: new InMemoryCache()\n    };\n}\n\n@NgModule({\n    providers: [\n        {\n            provide: APOLLO_OPTIONS,\n            useFactory: createApollo,\n            deps: [HttpLink],\n        },\n    ],\n})\nexport class GraphQLModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import * as dayjs from 'dayjs';\n\nexport class DateParseLogic {\n    static parseToFullDate(date: string) {\n        return dayjs(date).format('DD.MM.YYYY HH:mm:ss');\n    }\n}\n","import { Component, HostBinding } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    @HostBinding('class') hostClassName = 'd-flex flex-column flex-grow-1';\n\n    constructor(private router: Router) {\n        this.redirectToTargetPage();\n    }\n\n    redirectToTargetPage() {\n        const gitHubPersonalAccessToken = JSON.parse(localStorage.getItem('gitHubPersonalAccessToken'));\n        if (gitHubPersonalAccessToken === null) {\n            this.router.navigate(['/token-page']);\n        } else {\n            this.router.navigate(['/search-page']);\n        }\n    }\n}\n","<router-outlet></router-outlet>\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-token-page',\n    templateUrl: './token-page.component.html',\n    styleUrls: ['./token-page.component.scss']\n})\nexport class TokenPageComponent implements OnInit {\n    @HostBinding('class') hostClassName = 'd-flex flex-column flex-grow-1';\n\n    public tokenForm: FormGroup;\n\n    constructor(private router: Router) {}\n\n    ngOnInit() {\n        this.tokenForm = new FormGroup({\n            gitHubAccessToken: new FormControl('', [Validators.required])\n        });\n    }\n\n    onClickNextButton() {\n        this.tokenForm.get('gitHubAccessToken').markAsTouched();\n        if (this.tokenForm.valid) {\n            this.saveTokenToLocalStorage();\n            this.navigateToNextPage();\n        }\n    }\n\n    saveTokenToLocalStorage() {\n        localStorage.setItem('gitHubPersonalAccessToken', JSON.stringify(this.tokenForm.get('gitHubAccessToken').value));\n    }\n\n    navigateToNextPage() {\n        this.router.navigate(['/search-page']);\n    }\n}\n","<section class=\"container d-flex flex-column flex-grow-1 pt-3 pt-sm-4 pt-md-5\">\n    <div class=\"flex-grow-1\">\n        <h1 class=\"mb-0\">Access Token</h1>\n\n        <h3 class=\"pt-3 pt-sm-4 mb-0\">\n            Please enter your GitHub Personal Access Token in the field below and press Next button\n        </h3>\n\n        <div class=\"row pt-3 pt-sm-4\">\n            <div class=\"col-md-6\">\n                <form [formGroup]=\"tokenForm\">\n                    <mat-form-field class=\"w-100 notranslate\">\n                        <input\n                            autocomplete=\"off\"\n                            matInput\n                            placeholder=\"Token\"\n                            spellcheck=\"false\"\n                            formControlName=\"gitHubAccessToken\"\n                        />\n                        <mat-error>\n                            <div class=\"mat-small\">\n                                Token field should be filled before you go to the next page\n                            </div>\n                        </mat-error>\n                    </mat-form-field>\n                </form>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"app-navigation-menu d-flex justify-content-end py-3 mt-5\">\n        <button\n            class=\"d-flex justify-content-center align-items-center\"\n            mat-flat-button\n            color=\"primary\"\n            (click)=\"onClickNextButton()\"\n        >\n            <span>Next</span>\n            <mat-icon class=\"ml-2\">east</mat-icon>\n        </button>\n    </div>\n</section>\n","import { Injectable } from '@angular/core';\nimport { Apollo, gql } from 'apollo-angular';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { DateParseLogic } from '../utils/date-parse-logic';\n\n\ninterface RepositoryData {\n    name: string;\n    description: string;\n    url: string;\n    updatedAt: string;\n    owner: {\n        login: string;\n        avatarUrl: string;\n    };\n    stargazerCount: number;\n}\n\ninterface ResponseScheme {\n    user: {\n        repositories: {\n            nodes: RepositoryData[];\n        }\n    };\n}\n\ninterface ApolloResponseData {\n    data: ResponseScheme;\n    loading: boolean;\n    networkStatus: number;\n}\n\nexport interface MappedRepositoryData {\n    name: string;\n    description: string;\n    url: string;\n    updatedAt: string;\n    authorName: string;\n    authorPhotoUrl: string;\n    countOfStars: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GithubApiService {\n\n    constructor(private apollo: Apollo) { }\n\n    getRepositoriesDataByUsername(userName: string): Observable<any> {\n        const GET_REPOSITORIES_DATA = gql`\n            {\n                user(login: \"${userName}\") {\n                    repositories(first: 100) {\n                        nodes {\n                            name\n                            description\n                            url\n                            owner {\n                                avatarUrl\n                                login\n                            }\n                            updatedAt\n                            stargazerCount\n                        }\n                    }\n                }\n            }\n        `;\n\n        return this.apollo\n            .watchQuery({\n                query: GET_REPOSITORIES_DATA\n            })\n            .valueChanges\n            .pipe(\n                map((resp: ApolloResponseData) => {\n                    if (resp\n                        && resp.data\n                        && resp.data.user\n                        && resp.data.user.repositories\n                        && Array.isArray(resp.data.user.repositories.nodes)\n                    ) {\n                        return resp.data.user.repositories.nodes.map((repository: RepositoryData) => {\n                            return {\n                                name: repository.name,\n                                description: repository.description,\n                                url: repository.url,\n                                updatedAt: DateParseLogic.parseToFullDate(repository.updatedAt),\n                                authorName: repository.owner.login,\n                                authorPhotoUrl: repository.owner.avatarUrl,\n                                countOfStars: repository.stargazerCount\n                            } as MappedRepositoryData;\n                        });\n                    } else {\n                        return [];\n                    }\n                }),\n                catchError(() => {\n                    return of([]);\n                })\n            );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { TokenPageComponent } from './token-page/token-page.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SearchPageGuard } from './guards/search-page.guard';\nimport { GraphQLModule } from './graphql.module';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        TokenPageComponent,\n        SearchPageComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        AppRoutingModule,\n        GraphQLModule\n    ],\n    providers: [SearchPageGuard],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { TokenPageComponent } from './token-page/token-page.component';\nimport { SearchPageComponent } from './search-page/search-page.component';\nimport { SearchPageGuard } from './guards/search-page.guard';\n\n\nconst appRoutes: Routes = [\n    {\n        path: '',\n        component: AppComponent,\n        children: [\n            {\n                path: 'token-page',\n                component: TokenPageComponent\n            },\n            {\n                path: 'search-page',\n                component: SearchPageComponent,\n                canActivate: [SearchPageGuard]\n            }\n        ]\n    },\n    {\n        path: '**',\n        redirectTo: '',\n        pathMatch: 'full'\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(appRoutes, { relativeLinkResolution: 'legacy' })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\n\n\nconst MATERIAL_MODULES = [\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule\n];\n\n@NgModule({\n    imports: [...MATERIAL_MODULES],\n    exports: [...MATERIAL_MODULES]\n})\nexport class MaterialModule { }\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, take, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { GithubApiService, MappedRepositoryData } from '../api/github-api.service';\n\n\n@Component({\n    selector: 'app-search-page',\n    templateUrl: './search-page.component.html',\n    styleUrls: ['./search-page.component.scss']\n})\nexport class SearchPageComponent implements OnInit, OnDestroy {\n    @HostBinding('class') hostClassName = 'd-flex flex-column flex-grow-1';\n\n    private gitHubAccessToken: string;\n    public searchForm: FormGroup;\n    public repositoriesList: MappedRepositoryData[];\n    private unsubscriber$ = new Subject<void>();\n\n    constructor(\n        private router: Router,\n        private githubApiService: GithubApiService\n    ) {}\n\n    ngOnInit() {\n        this.getGitHubAccessToken();\n\n        this.searchForm = new FormGroup({\n            githubUserName: new FormControl('')\n        });\n\n        this.searchForm.get('githubUserName').valueChanges\n            .pipe(\n                debounceTime(500),\n                takeUntil(this.unsubscriber$)\n            )\n            .subscribe((userName: string) => {\n                this.githubApiService.getRepositoriesDataByUsername(userName)\n                    .pipe(\n                        take(1),\n                        takeUntil(this.unsubscriber$)\n                    )\n                    .subscribe((repositories: MappedRepositoryData[]) => {\n                        this.repositoriesList = repositories;\n                    });\n            });\n    }\n\n    getGitHubAccessToken() {\n        this.gitHubAccessToken = JSON.parse(localStorage.getItem('gitHubPersonalAccessToken'));\n    }\n\n    onClickBackButton() {\n        this.removeTokenFromLocalStorage();\n        this.navigateToPrevPage();\n    }\n\n    removeTokenFromLocalStorage() {\n        localStorage.removeItem('gitHubPersonalAccessToken');\n    }\n\n    navigateToPrevPage() {\n        this.router.navigate(['/token-page']);\n    }\n\n    ngOnDestroy() {\n        this.unsubscriber$.next();\n        this.unsubscriber$.complete();\n    }\n}\n","<section class=\"container d-flex flex-column flex-grow-1 pt-3 pt-sm-4 pt-md-5\">\n    <div class=\"flex-grow-1\">\n        <h1 class=\"mb-0\">GitHub Search</h1>\n\n        <h3 class=\"pt-3 pt-sm-4 mb-0\">\n            Please enter GitHub user name for search\n        </h3>\n\n        <div class=\"row pt-3 pt-sm-4\">\n            <div class=\"col-md-6\">\n                <form [formGroup]=\"searchForm\">\n                    <mat-form-field class=\"w-100 notranslate\">\n                        <input\n                            autocomplete=\"off\"\n                            matInput\n                            placeholder=\"Username\"\n                            spellcheck=\"false\"\n                            formControlName=\"githubUserName\"\n                        />\n                    </mat-form-field>\n                </form>\n            </div>\n        </div>\n\n        <div *ngIf=\"repositoriesList !== undefined\" class=\"pt-3 pt-sm-4\">\n            <mat-card *ngIf=\"repositoriesList.length === 0\">\n                <h3>No results found</h3>\n            </mat-card>\n\n            <ng-container *ngIf=\"repositoriesList.length > 0\">\n                <mat-card\n                    *ngFor=\"let repository of repositoriesList; first as isFirst\"\n                    [class.mt-4]=\"!isFirst\"\n                >\n                    <div class=\"d-flex\">\n                        <div class=\"search-repository-author-photo d-flex justify-content-center align-items-center flex-shrink-0 pt-1\">\n                            <img [src]=\"repository.authorPhotoUrl\" class=\"search-repository-author-photo-img responsive-img\">\n                        </div>\n\n                        <div class=\"ml-2 ml-sm-4\">\n                            <div class=\"search-repository-name\">\n                                {{ repository.name }}\n                            </div>\n\n                            <div class=\"mat-body-1 pt-2\">\n                                Repository url:\n                                <a [href]=\"repository.url\" class=\"text-break\">\n                                    {{ repository.url }}\n                                </a>\n                            </div>\n\n                            <div class=\"d-flex flex-wrap pt-1\">\n                                <div class=\"mat-small pt-1 mr-3\">\n                                    <span class=\"search-repository-field-title\">\n                                        Count of stars:\n                                    </span>\n\n                                    {{ repository.countOfStars }}\n                                </div>\n\n                                <div class=\"mat-small pt-1 mr-3\">\n                                    <span class=\"search-repository-field-title\">\n                                        Author:\n                                    </span>\n\n                                    <span class=\"text-nowrap\">\n                                        {{ repository.authorName }}\n                                    </span>\n                                </div>\n\n                                <div class=\"mat-small pt-1\">\n                                    <span class=\"search-repository-field-title\">\n                                        Last changed:\n                                    </span>\n\n                                    <span class=\"text-nowrap\">\n                                        {{ repository.updatedAt }}\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"mat-body-1 pt-3 pt-sm-4\">\n                        {{ repository.description }}\n                    </div>\n                </mat-card>\n            </ng-container>\n        </div>\n    </div>\n\n    <div class=\"app-navigation-menu py-3 mt-5\">\n        <button\n            class=\"d-flex justify-content-center align-items-center\"\n            mat-flat-button\n            color=\"primary\"\n            (click)=\"onClickBackButton()\"\n        >\n            <mat-icon class=\"mr-2\">west</mat-icon>\n            <span>Back</span>\n        </button>\n    </div>\n</section>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}