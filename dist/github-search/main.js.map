{"version":3,"sources":["./src/app/guards/search-page.guard.ts","./src/app/graphql.module.ts","./src/environments/environment.ts","./src/app/utils/date-parse-logic.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/token-page/token-page.component.ts","./src/app/token-page/token-page.component.html","./src/app/api/github-api.service.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/search-page/search-page.component.ts","./src/app/search-page/search-page.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class SearchPageGuard implements CanActivate {\r\n    constructor(private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        const gitHubPersonalAccessToken = JSON.parse(localStorage.getItem('gitHubPersonalAccessToken'));\r\n        if (gitHubPersonalAccessToken === null) {\r\n            this.router.navigate(['/token-page']);\r\n        }\r\n        return gitHubPersonalAccessToken !== null;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { APOLLO_OPTIONS } from 'apollo-angular';\r\nimport { ApolloLink, InMemoryCache } from '@apollo/client/core';\r\nimport { HttpLink } from 'apollo-angular/http';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nconst uri = 'https://api.github.com/graphql'; // <-- add the URL of the GraphQL server here\r\n\r\nexport function createApollo(httpLink: HttpLink) {\r\n    const basic = setContext((operation, context) => ({\r\n        headers: {\r\n            Accept: 'charset=utf-8'\r\n        }\r\n    }));\r\n\r\n    const auth = setContext((operation, context) => {\r\n        const gitHubPersonalAccessToken = JSON.parse(localStorage.getItem('gitHubPersonalAccessToken'));\r\n\r\n        if (gitHubPersonalAccessToken === null) {\r\n            return {};\r\n        } else {\r\n            return {\r\n                headers: {\r\n                    Authorization: `Bearer ${gitHubPersonalAccessToken}`\r\n                }\r\n            };\r\n        }\r\n    });\r\n\r\n    return {\r\n        link: ApolloLink.from([basic, auth, httpLink.create({ uri })]),\r\n        cache: new InMemoryCache()\r\n    };\r\n}\r\n\r\n@NgModule({\r\n    providers: [\r\n        {\r\n            provide: APOLLO_OPTIONS,\r\n            useFactory: createApollo,\r\n            deps: [HttpLink],\r\n        },\r\n    ],\r\n})\r\nexport class GraphQLModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import * as dayjs from 'dayjs';\r\n\r\nexport class DateParseLogic {\r\n    static parseToFullDate(date: string) {\r\n        return dayjs(date).format('DD.MM.YYYY HH:mm:ss');\r\n    }\r\n}\r\n","import { Component, HostBinding } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n    @HostBinding('class') hostClassName = 'd-flex flex-column flex-grow-1';\r\n\r\n    constructor(private router: Router) {\r\n        this.redirectToTargetPage();\r\n    }\r\n\r\n    redirectToTargetPage() {\r\n        const gitHubPersonalAccessToken = JSON.parse(localStorage.getItem('gitHubPersonalAccessToken'));\r\n        if (gitHubPersonalAccessToken === null) {\r\n            this.router.navigate(['/token-page']);\r\n        } else {\r\n            this.router.navigate(['/search-page']);\r\n        }\r\n    }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-token-page',\r\n    templateUrl: './token-page.component.html',\r\n    styleUrls: ['./token-page.component.scss']\r\n})\r\nexport class TokenPageComponent implements OnInit {\r\n    @HostBinding('class') hostClassName = 'd-flex flex-column flex-grow-1';\r\n\r\n    public tokenForm: FormGroup;\r\n\r\n    constructor(private router: Router) {}\r\n\r\n    ngOnInit() {\r\n        this.tokenForm = new FormGroup({\r\n            gitHubAccessToken: new FormControl('', [Validators.required])\r\n        });\r\n    }\r\n\r\n    onClickNextButton() {\r\n        this.tokenForm.get('gitHubAccessToken').markAsTouched();\r\n        if (this.tokenForm.valid) {\r\n            this.saveTokenToLocalStorage();\r\n            this.navigateToNextPage();\r\n        }\r\n    }\r\n\r\n    saveTokenToLocalStorage() {\r\n        localStorage.setItem('gitHubPersonalAccessToken', JSON.stringify(this.tokenForm.get('gitHubAccessToken').value));\r\n    }\r\n\r\n    navigateToNextPage() {\r\n        this.router.navigate(['/search-page']);\r\n    }\r\n}\r\n","<section class=\"d-flex flex-column flex-grow-1 position-relative\">\r\n    <div class=\"container flex-grow-1 pt-3 pt-sm-4 pt-md-5 pb-4 pb-sm-5\">\r\n        <h1 class=\"mb-0\">Access Token</h1>\r\n\r\n        <h3 class=\"pt-2 pt-sm-4 mb-0\">\r\n            Please enter your GitHub Personal Access Token in the field below and press Next button\r\n        </h3>\r\n\r\n        <div class=\"row pt-3 pt-sm-4\">\r\n            <div class=\"col-md-6\">\r\n                <form [formGroup]=\"tokenForm\">\r\n                    <mat-form-field class=\"w-100 notranslate\">\r\n                        <input\r\n                            autocomplete=\"off\"\r\n                            matInput\r\n                            placeholder=\"Token\"\r\n                            spellcheck=\"false\"\r\n                            formControlName=\"gitHubAccessToken\"\r\n                        />\r\n                        <mat-error>\r\n                            <div class=\"mat-small\">\r\n                                Token field should be filled before you go to the next page\r\n                            </div>\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"app-navigation-menu py-2 py-sm-3\">\r\n        <div class=\"container d-flex justify-content-end\">\r\n            <button\r\n                class=\"d-flex justify-content-center align-items-center\"\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                (click)=\"onClickNextButton()\"\r\n            >\r\n                <span>Next</span>\r\n                <mat-icon class=\"ml-2\">east</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { Injectable } from '@angular/core';\r\nimport { Apollo, gql } from 'apollo-angular';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport { DateParseLogic } from '../utils/date-parse-logic';\r\n\r\n\r\ninterface RepositoryData {\r\n    name: string;\r\n    description: string;\r\n    url: string;\r\n    updatedAt: string;\r\n    owner: {\r\n        login: string;\r\n        avatarUrl: string;\r\n    };\r\n    stargazerCount: number;\r\n}\r\n\r\ninterface ResponseSchemeEdge {\r\n    node: RepositoryData;\r\n}\r\n\r\ninterface ResponseScheme {\r\n    search: {\r\n        edges: ResponseSchemeEdge[];\r\n    };\r\n}\r\n\r\ninterface ApolloResponseData {\r\n    data: ResponseScheme;\r\n    loading: boolean;\r\n    networkStatus: number;\r\n}\r\n\r\nexport interface MappedRepositoryData {\r\n    name: string;\r\n    description: string;\r\n    url: string;\r\n    updatedAt: string;\r\n    authorName: string;\r\n    authorPhotoUrl: string;\r\n    countOfStars: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GithubApiService {\r\n\r\n    constructor(private apollo: Apollo) { }\r\n\r\n    getRepositoriesDataByRepoName(repositoryName: string): Observable<MappedRepositoryData[]> {\r\n        const GET_REPOSITORIES_DATA = gql`\r\n            {\r\n                search(query: \"${repositoryName}\", type: REPOSITORY, first: 100) {\r\n                    edges {\r\n                        node {\r\n                            ... on Repository {\r\n                                name\r\n                                description\r\n                                url\r\n                                owner {\r\n                                    avatarUrl\r\n                                    login\r\n                                }\r\n                                updatedAt\r\n                                stargazerCount\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `;\r\n\r\n        return this.apollo\r\n            .watchQuery({\r\n                query: GET_REPOSITORIES_DATA\r\n            })\r\n            .valueChanges\r\n            .pipe(\r\n                map((resp: ApolloResponseData) => {\r\n                    if (resp\r\n                        && resp.data\r\n                        && resp.data.search\r\n                        && Array.isArray(resp.data.search.edges)\r\n                    ) {\r\n                        return resp.data.search.edges.map((responseSchemeEdge: ResponseSchemeEdge) => {\r\n                            return {\r\n                                name: responseSchemeEdge.node.name,\r\n                                description: responseSchemeEdge.node.description,\r\n                                url: responseSchemeEdge.node.url,\r\n                                updatedAt: DateParseLogic.parseToFullDate(responseSchemeEdge.node.updatedAt),\r\n                                authorName: responseSchemeEdge.node.owner.login,\r\n                                authorPhotoUrl: responseSchemeEdge.node.owner.avatarUrl,\r\n                                countOfStars: responseSchemeEdge.node.stargazerCount\r\n                            } as MappedRepositoryData;\r\n                        });\r\n                    } else {\r\n                        return [];\r\n                    }\r\n                }),\r\n                catchError(() => {\r\n                    return of([]);\r\n                })\r\n            );\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { TokenPageComponent } from './token-page/token-page.component';\r\nimport { SearchPageComponent } from './search-page/search-page.component';\r\nimport { MaterialModule } from './material.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SearchPageGuard } from './guards/search-page.guard';\r\nimport { GraphQLModule } from './graphql.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        TokenPageComponent,\r\n        SearchPageComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        ReactiveFormsModule,\r\n        MaterialModule,\r\n        AppRoutingModule,\r\n        GraphQLModule\r\n    ],\r\n    providers: [SearchPageGuard],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { TokenPageComponent } from './token-page/token-page.component';\r\nimport { SearchPageComponent } from './search-page/search-page.component';\r\nimport { SearchPageGuard } from './guards/search-page.guard';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    {\r\n        path: 'token-page',\r\n        component: TokenPageComponent\r\n    },\r\n    {\r\n        path: 'search-page',\r\n        component: SearchPageComponent,\r\n        canActivate: [SearchPageGuard]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes, { relativeLinkResolution: 'legacy' })],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n\r\nconst MATERIAL_MODULES = [\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatProgressSpinnerModule\r\n];\r\n\r\n@NgModule({\r\n    imports: [...MATERIAL_MODULES],\r\n    exports: [...MATERIAL_MODULES]\r\n})\r\nexport class MaterialModule { }\r\n","import { Component, HostBinding, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { debounceTime, take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { GithubApiService, MappedRepositoryData } from '../api/github-api.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-search-page',\r\n    templateUrl: './search-page.component.html',\r\n    styleUrls: ['./search-page.component.scss']\r\n})\r\nexport class SearchPageComponent implements OnInit, OnDestroy {\r\n    @HostBinding('class') hostClassName = 'd-flex flex-column flex-grow-1';\r\n\r\n    private gitHubAccessToken: string;\r\n    public searchForm: FormGroup;\r\n    public searchRequestInProgress = false;\r\n    public repositoriesList: MappedRepositoryData[];\r\n    private unsubscriber$ = new Subject<void>();\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private githubApiService: GithubApiService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.getGitHubAccessToken();\r\n\r\n        this.searchForm = new FormGroup({\r\n            githubRepositoryName: new FormControl('')\r\n        });\r\n\r\n        this.searchForm.get('githubRepositoryName').valueChanges\r\n            .pipe(\r\n                debounceTime(500),\r\n                takeUntil(this.unsubscriber$)\r\n            )\r\n            .subscribe((repoName: string) => {\r\n                this.searchRequestInProgress = true;\r\n                this.githubApiService.getRepositoriesDataByRepoName(repoName)\r\n                    .pipe(\r\n                        take(1),\r\n                        takeUntil(this.unsubscriber$)\r\n                    )\r\n                    .subscribe((repositories: MappedRepositoryData[]) => {\r\n                        this.searchRequestInProgress = false;\r\n                        this.repositoriesList = this.getFilteredRepositoriesList(repositories, repoName);\r\n                    });\r\n            });\r\n    }\r\n\r\n    getFilteredRepositoriesList(repositories: MappedRepositoryData[], nameForFiltration: string) {\r\n        return repositories.filter((repo: MappedRepositoryData) => {\r\n            return repo.name.toLowerCase().includes(nameForFiltration.toLowerCase());\r\n        });\r\n    }\r\n\r\n    getGitHubAccessToken() {\r\n        this.gitHubAccessToken = JSON.parse(localStorage.getItem('gitHubPersonalAccessToken'));\r\n    }\r\n\r\n    onClickBackButton() {\r\n        this.removeTokenFromLocalStorage();\r\n        this.navigateToPrevPage();\r\n    }\r\n\r\n    removeTokenFromLocalStorage() {\r\n        localStorage.removeItem('gitHubPersonalAccessToken');\r\n    }\r\n\r\n    navigateToPrevPage() {\r\n        this.router.navigate(['/token-page']);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unsubscriber$.next();\r\n        this.unsubscriber$.complete();\r\n    }\r\n}\r\n","<section class=\"d-flex flex-column flex-grow-1 position-relative\">\r\n    <div class=\"container flex-grow-1 pt-3 pt-sm-4 pt-md-5 pb-4 pb-sm-5\">\r\n        <h1 class=\"mb-0\">GitHub Repository Search</h1>\r\n\r\n        <h3 class=\"pt-2 pt-sm-4 mb-0\">\r\n            Please enter GitHub repository name for search\r\n        </h3>\r\n\r\n        <div class=\"row pt-3 pt-sm-4\">\r\n            <div class=\"col-md-6\">\r\n                <form [formGroup]=\"searchForm\">\r\n                    <mat-form-field class=\"w-100 notranslate\">\r\n                        <input\r\n                            autocomplete=\"off\"\r\n                            matInput\r\n                            placeholder=\"Repository name\"\r\n                            spellcheck=\"false\"\r\n                            formControlName=\"githubRepositoryName\"\r\n                        />\r\n                    </mat-form-field>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"position-relative\">\r\n            <div\r\n                *ngIf=\"searchRequestInProgress\"\r\n                class=\"search-preloader d-flex justify-content-center align-items-center\"\r\n            >\r\n                <mat-spinner\r\n                    color=\"primary\"\r\n                    [diameter]=\"40\"\r\n                    [strokeWidth]=\"4\"\r\n                ></mat-spinner>\r\n            </div>\r\n\r\n            <div\r\n                *ngIf=\"repositoriesList !== undefined\"\r\n                class=\"pt-3 pt-sm-4\"\r\n                [class.search-preload-transparency]=\"searchRequestInProgress\"\r\n            >\r\n                <mat-card *ngIf=\"repositoriesList.length === 0\">\r\n                    <h3>No results found</h3>\r\n                </mat-card>\r\n\r\n                <ng-container *ngIf=\"repositoriesList.length > 0\">\r\n                    <mat-card\r\n                        *ngFor=\"let repository of repositoriesList; first as isFirst\"\r\n                        [class.mt-4]=\"!isFirst\"\r\n                    >\r\n                        <div class=\"d-flex\">\r\n                            <div class=\"search-repository-author-photo d-flex justify-content-center align-items-center flex-shrink-0 pt-1\">\r\n                                <img [src]=\"repository.authorPhotoUrl\" class=\"search-repository-author-photo-img responsive-img\">\r\n                            </div>\r\n\r\n                            <div class=\"ml-2 ml-sm-4\">\r\n                                <div class=\"search-repository-name\">\r\n                                    {{ repository.name }}\r\n                                </div>\r\n\r\n                                <div class=\"mat-body-1 pt-2\">\r\n                                    Repository url:\r\n                                    <a [href]=\"repository.url\" class=\"text-break\">\r\n                                        {{ repository.url }}\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div class=\"d-flex flex-wrap pt-1\">\r\n                                    <div class=\"mat-small pt-1 mr-3\">\r\n                                        <span class=\"search-repository-field-title\">\r\n                                            Count of stars:\r\n                                        </span>\r\n\r\n                                        {{ repository.countOfStars }}\r\n                                    </div>\r\n\r\n                                    <div class=\"mat-small pt-1 mr-3\">\r\n                                    <span class=\"search-repository-field-title\">\r\n                                        Author:\r\n                                    </span>\r\n\r\n                                        <span class=\"text-nowrap\">\r\n                                            {{ repository.authorName }}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div class=\"mat-small pt-1\">\r\n                                    <span class=\"search-repository-field-title\">\r\n                                        Last changed:\r\n                                    </span>\r\n\r\n                                        <span class=\"text-nowrap\">\r\n                                            {{ repository.updatedAt }}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"mat-body-1 pt-3 pt-sm-4\">\r\n                            {{ repository.description }}\r\n                        </div>\r\n                    </mat-card>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"app-navigation-menu py-2 py-sm-3\">\r\n        <div class=\"container\">\r\n            <button\r\n                class=\"d-flex justify-content-center align-items-center\"\r\n                mat-flat-button\r\n                color=\"primary\"\r\n                (click)=\"onClickBackButton()\"\r\n            >\r\n                <mat-icon class=\"mr-2\">west</mat-icon>\r\n                <span>Back</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}